// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id  Int @id @default(autoincrement())
  name String @db.VarChar(200)
  desc String?  @db.VarChar(500)
  enable Boolean @default(true)
  mercs CategoryDtl[]
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  deleteAt DateTime?
}

model Merchandise {
  id  Int @id @default(autoincrement())
  name String @db.VarChar(200)
  desc String @db.VarChar(500)
  enable Boolean @default(true)
  cost Float
  price Float
  cats CategoryDtl[]
  cartItems CartItems[]
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  deleteAt DateTime?
}

model CategoryDtl {
  cat  Category @relation(fields:[catId], references: [id])
  catId Int
  merc Merchandise @relation(fields: [mercId], references: [id])
  mercId Int
  assignedAt DateTime @default(now())
  assignedBy String
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  deleteAt DateTime?
  @@id([catId, mercId])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String @db.VarChar(256)   @unique
  name      String @db.VarChar(32) 
  phone     String @db.VarChar(20) @unique
  gender    String @db.VarChar(2)
  role      Role     @default(USER)
  addresses Address[]
  orders Order[]
  cartItems CartItems[]
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  deleteAt DateTime?
}

model CartItems {
  uid Int
  user User @relation(fields: [uid], references: [id])
  mercId Int
  merc Merchandise @relation(fields: [mercId], references: [id])
  quantity Int
  // Could be deleted freely
  @@id([uid,mercId])
}

model Address {
  id Int @id @default(autoincrement())
  uid Int
  user User @relation(fields: [uid], references: [id])
  country String @db.VarChar(128)
  state String? @db.VarChar(128)
  county String? @db.VarChar(128)
  city String? @db.VarChar(128)
  district String? @db.VarChar(128)
  postalCode String? @db.VarChar(10)
  address String @db.VarChar(256)
  type Boolean // true for delivery address, false for bill address
  order Order[]
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  deleteAt DateTime?
  // Could not be deleted freely, because orders will use it
}

model Order {
  id Int @id @default(autoincrement())
  oid String @db.VarChar(50)
  uid Int
  user User @relation(fields: [uid], references: [id])
  addrId Int
  address Address @relation(fields: [addrId], references: [id])
  mercId Int
  quantity Int
  createAt DateTime  @default(now())
  updateAt  DateTime @updatedAt
  // Shouldn't be deleted
}


//model Stock {
//  mercId Int
//  stockAmount Int
//  delivAmount Int
//  saledAmount Int
//}

enum Role {
  ADMIN
  MANAGER
  USER 
}